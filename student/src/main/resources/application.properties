
%pod.quarkus.http.port=9865
%prod.quarkus.datasource.db-kind=mysql
%prod.quarkus.datasource.jdbc.url=jdbc:mysql://${DB_HOST}/${DB_NAME}?allowPublicKeyRetrieval=true
%prod.quarkus.datasource.username=${DB_USERNAME}
%pod.quarkus.datasource.password=${DB_PASSWORD}


%dev.quarkus.http.port=9875
%dev.quarkus.datasource.db-kind=mysql
%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/student_db
%dev.quarkus.datasource.username=root
%dev.quarkus.datasource.password=rootroot

quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true


##### Testing configurations   ########
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:student_db


## kafka consumer configurations  ##
kafka.bootstrap-servers=localhost:9092
mp.messaging.incoming.data-input.connector=smallrye-kafka
mp.messaging.incoming.data-input.topic=my-topic
mp.messaging.incoming.data-input.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.data-input.broadcast=true

## kafka producer configurations  ##
mp.messaging.outgoing.data-output.connector=smallrye-kafka
mp.messaging.outgoing.data-output.topic=my-topic
mp.messaging.outgoing.data-output.key.deserializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.data-output.merge=true